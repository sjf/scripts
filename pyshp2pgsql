#!/usr/bin/env python3
# -*-python-*-

from chardet.universaldetector import UniversalDetector
import os.path
import sys
from data import dbfUtils
import sys
from osgeo import osr
from urllib.parse import urlencode
from urllib.request import urlopen
import json
import os

shp_file = sys.argv[1]
table = ''.join(sys.argv[2:3]) or shp_file[0:-4]
dbf_file = shp_file[0:-4] + '.dbf'
prj_file = shp_file[0:-4] + '.prj'

#Try detecting the SRID, by default we set to 4326 and hope the best
srid=4326
if os.path.isfile(prj_file):
    prj_filef = open(prj_file, 'r')
    prj_txt = prj_filef.read()
    prj_filef.close()
    srs = osr.SpatialReference()
    srs.ImportFromESRI([prj_txt])
    srs.AutoIdentifyEPSG()
    code = srs.GetAuthorityCode(None)
    if code:
        srid= code
    else:
        #Ok, no luck, lets try with the OpenGeo service
        query = urlencode({
            'exact' : True,
            'error' : True,
            'mode' : 'wkt',
            'terms' : prj_txt})
        webres = urlopen('http://prj2epsg.org/search.json', query)
        jres = json.loads(webres.read())
        if jres['codes']:
            srid = int(jres['codes'][0]['code'])

#Try to detect the encoding
dbf = open(dbf_file, 'rb')
db = dbfUtils.dbfreader(dbf)

detector = UniversalDetector()
for row in db:
    for col in row:
        if type(col) == type(b''):
            #print(type(col), col)
            detector.feed(col)
            if detector.done: break
detector.close()
dbf.close()

encoding = detector.result["encoding"]
if encoding=="ascii":
    encoding="LATIN1"

cmd = "shp2pgsql -d -s %s -i -I -W %s %s %s > %s.sql; psql <%s.sql" % (srid, encoding, shp_file, table, table, table)
print(cmd)
res = os.system(cmd)
sys.exit(res)